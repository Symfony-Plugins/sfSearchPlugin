# How to Execute Unit Tests

This document will explain how to execute sfSearch's unit tests.

## Setup Environment
In order to run the tests, the environment must be configured correctly:

1. Create a new project:

        $ cd ~/workspace
        $ symfony generate:project sfSearch
        $ cd sfSearch

2. Install the plugins:

        $ svn co http://svn.symfony-project.com/plugins/sfSearchPlugin/trunk plugins/sfSearchPlugin
        $ svn co http://svn.symfony-project.com/plugins/sfLucenePlugin/trunk plugins/sfLucenePlugin
        $ svn co http://svn.symfony-project.com/plugins/sfPropelSearchPlugin/trunk plugins/sfPropelSearchPlugin

  Install all of the plugins you want to test.
  
3. Be sure to resolve dependencies. The unit tests for sfPropelSearchPlugin require *both* Propel 1.2 and Propel 1.3 for example.

4. Clear the cache:

      $ symfony cc

## Execute Tests
All tests are stored in the `test/unit/` and `test/functional/` directories.  To execute a single unit test, execute the PHP file.  Examples:

    $ php plugins/sfSearchPlugin/test/unit/service/xfServiceRegistryTest.php
    $ php plugins/sfLucenePlugin/test/unit/engine/xfLuceneEngineTest.php

We can prove that all tests for a plugin pass by using the `prove` script.  Examples:

    $ php plugins/sfSearchPlugin/test/bin/prove.php
    $ php plugins/sfPropelSearchPlugin/test/bin/prove.php
    $ php plugins/sfSymfonySearchPlugin/test/bin/prove.php

sfSearch aims for 100% automated test coverage. If xdebug is installed, we can prove that every line of code is executed using the `coverage` script. Examples:

    $ php plugins/sfSearchPlugin/test/bin/coverage.php
    $ php plugins/sfLucenePlugin/test/bin/coverage.php

We can test all search based plugins using the `all` script:

    $ php plugins/sfSearchPlugin/test/bin/all.php

<!-- 
vim:ft=mkd
-->
